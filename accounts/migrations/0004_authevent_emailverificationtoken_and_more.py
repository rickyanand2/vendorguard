# Generated by Django 5.2.3 on 2025-08-11 07:22

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0003_remove_invite_role'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(choices=[('login_success', 'Login Success'), ('login_failed', 'Login Failed'), ('logout', 'Logout'), ('password_change', 'Password Change'), ('mfa_enabled', 'MFA Enabled'), ('mfa_disabled', 'MFA Disabled'), ('email_verified', 'Email Verified')], max_length=32)),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, default='', max_length=255)),
                ('occurred_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-occurred_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailVerificationToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=64, unique=True, validators=[django.core.validators.MinLengthValidator(32)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationAccessRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('allow', 'Allow'), ('deny', 'Deny')], default='allow', max_length=10)),
                ('cidr', models.CharField(help_text='CIDR, e.g., 203.0.113.0/24', max_length=64)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=64, unique=True, validators=[django.core.validators.MinLengthValidator(32)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RecoveryCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_hash', models.CharField(max_length=128)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.AlterModelOptions(
            name='customuser',
            options={'ordering': ['-date_joined']},
        ),
        migrations.AlterModelOptions(
            name='invite',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='license',
            options={'ordering': ['end_date']},
        ),
        migrations.AlterModelOptions(
            name='membership',
            options={'ordering': ['organization__name', 'user__email']},
        ),
        migrations.AlterModelOptions(
            name='organization',
            options={'ordering': ['name']},
        ),
        migrations.AddField(
            model_name='customuser',
            name='email_verified_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='failed_login_count',
            field=models.PositiveSmallIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='customuser',
            name='last_login_ip',
            field=models.GenericIPAddressField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='last_password_change',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='locked_until',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='mfa_enabled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='customuser',
            name='mfa_secret',
            field=models.CharField(blank=True, max_length=64, null=True),
        ),
        migrations.AddField(
            model_name='invite',
            name='invited_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_invites', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='invite',
            name='role',
            field=models.CharField(choices=[('owner', 'Owner'), ('admin', 'Admin'), ('member', 'Member'), ('viewer', 'Viewer')], default='member', max_length=10),
        ),
        migrations.AddField(
            model_name='membership',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='membership',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='membership',
            name='is_primary',
            field=models.BooleanField(default=False, help_text='Default org when user has multiple orgs.'),
        ),
        migrations.AddField(
            model_name='membership',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='organization',
            name='enforce_business_email',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='organization',
            name='lockout_minutes',
            field=models.PositiveSmallIntegerField(default=15),
        ),
        migrations.AddField(
            model_name='organization',
            name='max_failed_logins',
            field=models.PositiveSmallIntegerField(default=7),
        ),
        migrations.AddField(
            model_name='organization',
            name='password_min_length',
            field=models.PositiveSmallIntegerField(default=12),
        ),
        migrations.AddField(
            model_name='organization',
            name='require_mfa',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='organization',
            name='session_timeout_minutes',
            field=models.PositiveSmallIntegerField(default=60),
        ),
        migrations.AddField(
            model_name='organization',
            name='status',
            field=models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('archived', 'Archived')], default='active', max_length=12),
        ),
        migrations.AddField(
            model_name='organization',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='email',
            field=models.EmailField(db_index=True, max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='first_name',
            field=models.CharField(blank=True, default='', max_length=50),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='last_name',
            field=models.CharField(blank=True, default='', max_length=50),
        ),
        migrations.AlterField(
            model_name='invite',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invites', to='accounts.organization'),
        ),
        migrations.AlterField(
            model_name='invite',
            name='token',
            field=models.CharField(max_length=64, unique=True, validators=[django.core.validators.MinLengthValidator(32)]),
        ),
        migrations.AlterField(
            model_name='license',
            name='organization',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='license', to='accounts.organization'),
        ),
        migrations.AlterField(
            model_name='license',
            name='start_date',
            field=models.DateField(default=django.utils.timezone.localdate),
        ),
        migrations.AlterField(
            model_name='membership',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='accounts.organization'),
        ),
        migrations.AlterField(
            model_name='membership',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='organization',
            name='domain',
            field=models.CharField(blank=True, help_text='Business email domain.', max_length=191, null=True),
        ),
        migrations.AddIndex(
            model_name='invite',
            index=models.Index(fields=['email'], name='accounts_in_email_23fd1b_idx'),
        ),
        migrations.AddIndex(
            model_name='invite',
            index=models.Index(fields=['organization', 'created_at'], name='accounts_in_organiz_941d17_idx'),
        ),
        migrations.AddIndex(
            model_name='license',
            index=models.Index(fields=['end_date'], name='accounts_li_end_dat_ef2758_idx'),
        ),
        migrations.AddIndex(
            model_name='license',
            index=models.Index(fields=['plan'], name='accounts_li_plan_95a1f5_idx'),
        ),
        migrations.AddIndex(
            model_name='membership',
            index=models.Index(fields=['organization', 'role'], name='accounts_me_organiz_91db9c_idx'),
        ),
        migrations.AddIndex(
            model_name='membership',
            index=models.Index(fields=['user', 'is_active'], name='accounts_me_user_id_960c5b_idx'),
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['name'], name='accounts_or_name_e3b6a5_idx'),
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['domain'], name='accounts_or_domain_37062a_idx'),
        ),
        migrations.AddConstraint(
            model_name='invite',
            constraint=models.UniqueConstraint(condition=models.Q(('accepted_at__isnull', True), ('is_expired', False)), fields=('organization', 'email'), name='uniq_pending_invite_per_email_org'),
        ),
        migrations.AddConstraint(
            model_name='membership',
            constraint=models.UniqueConstraint(condition=models.Q(('is_active', True)), fields=('user', 'organization'), name='uniq_user_org_active'),
        ),
        migrations.AddConstraint(
            model_name='membership',
            constraint=models.UniqueConstraint(condition=models.Q(('is_primary', True), ('is_active', True)), fields=('user',), name='uniq_primary_membership_per_user'),
        ),
        migrations.AddConstraint(
            model_name='organization',
            constraint=models.UniqueConstraint(condition=models.Q(('domain__isnull', False), models.Q(('domain', ''), _negated=True)), fields=('domain',), name='uniq_org_domain_nullable'),
        ),
        migrations.AddField(
            model_name='authevent',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auth_events', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='emailverificationtoken',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_tokens', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='organizationaccessrule',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_rules', to='accounts.organization'),
        ),
        migrations.AddField(
            model_name='passwordresettoken',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reset_tokens', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='recoverycode',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recovery_codes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='authevent',
            index=models.Index(fields=['user', 'occurred_at'], name='accounts_au_user_id_5e42ac_idx'),
        ),
        migrations.AddIndex(
            model_name='emailverificationtoken',
            index=models.Index(fields=['user', 'created_at'], name='accounts_em_user_id_6989e4_idx'),
        ),
        migrations.AddIndex(
            model_name='organizationaccessrule',
            index=models.Index(fields=['organization', 'is_active'], name='accounts_or_organiz_75197f_idx'),
        ),
        migrations.AddIndex(
            model_name='passwordresettoken',
            index=models.Index(fields=['user', 'created_at'], name='accounts_pa_user_id_8cd138_idx'),
        ),
        migrations.AddIndex(
            model_name='recoverycode',
            index=models.Index(fields=['user'], name='accounts_re_user_id_de81f5_idx'),
        ),
    ]
