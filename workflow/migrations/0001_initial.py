# Generated by Django 5.2.3 on 2025-08-29 03:20

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('is_initial', models.BooleanField(default=False)),
                ('is_final', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Transition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Unique within the workflow.', max_length=100)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='outgoing', to='workflow.state')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='incoming', to='workflow.state')),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transitions', to='workflow.workflow')),
            ],
        ),
        migrations.AddField(
            model_name='state',
            name='workflow',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='states', to='workflow.workflow'),
        ),
        migrations.CreateModel(
            name='WorkflowObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('current_state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='current_for', to='workflow.state')),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='workflow.workflow')),
            ],
        ),
        migrations.CreateModel(
            name='WorkflowLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=64)),
                ('notes', models.TextField(blank=True)),
                ('at', models.DateTimeField()),
                ('actor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('workflow_object', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='logs', to='workflow.workflowobject')),
            ],
            options={
                'ordering': ('-at', '-id'),
            },
        ),
        migrations.CreateModel(
            name='TransitionAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Label (for readability in Admin).', max_length=100)),
                ('type', models.CharField(choices=[('NOOP', 'No operation'), ('SET_FIELD', 'Set obj.<field> = params.value'), ('MIRROR_STATE', 'Mirror state name to obj.<field> with transform'), ('APPEND_STATUS_SUFFIX', 'Append suffix to obj.<field>')], max_length=32)),
                ('params', models.JSONField(blank=True, help_text='Optional JSON for action configuration.', null=True)),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('transition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_rows', to='workflow.transition')),
            ],
            options={
                'ordering': ('order', 'id'),
                'indexes': [models.Index(fields=['transition', 'enabled'], name='workflow_tr_transit_776740_idx'), models.Index(fields=['type'], name='workflow_tr_type_ca78a2_idx')],
            },
        ),
        migrations.CreateModel(
            name='TransitionGuard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Label (for readability in Admin).', max_length=100)),
                ('type', models.CharField(choices=[('ALWAYS_ALLOW', 'Always allow'), ('ALWAYS_DENY', 'Always deny'), ('USER_SUPERUSER', 'User is superuser'), ('SAME_TENANT', 'User.tenant_id == Object.tenant_id (relaxed allow if either missing)'), ('HAS_PERM', "User has Django permission (params.perm='app_label.codename')"), ('IN_GROUPS', 'User in any of params.groups'), ('OBJECT_OWNER', "User == getattr(obj, params.attr or 'created_by')"), ('FIELD_OP', 'Compare obj.<path> via op (eq, ne, in, nin, contains, icontains, gte, lte, isnull)')], max_length=32)),
                ('params', models.JSONField(blank=True, help_text='Optional JSON for guard configuration.', null=True)),
                ('group', models.PositiveIntegerField(default=0, help_text='OR-group index; ALL in a group must pass.')),
                ('order', models.PositiveSmallIntegerField(default=0, help_text='Ordering within group (cosmetic).')),
                ('negated', models.BooleanField(default=False, help_text='Invert the result of this guard.')),
                ('enabled', models.BooleanField(default=True)),
                ('transition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guard_rows', to='workflow.transition')),
            ],
            options={
                'ordering': ('group', 'order', 'id'),
                'indexes': [models.Index(fields=['transition', 'group'], name='workflow_tr_transit_4ca964_idx'), models.Index(fields=['transition', 'enabled'], name='workflow_tr_transit_193041_idx'), models.Index(fields=['type'], name='workflow_tr_type_d693ca_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='transition',
            index=models.Index(fields=['workflow', 'name'], name='workflow_tr_workflo_b74bd4_idx'),
        ),
        migrations.AddIndex(
            model_name='transition',
            index=models.Index(fields=['workflow', 'source'], name='workflow_tr_workflo_74ff4b_idx'),
        ),
        migrations.AddIndex(
            model_name='transition',
            index=models.Index(fields=['workflow', 'target'], name='workflow_tr_workflo_a7c78d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='transition',
            unique_together={('workflow', 'name')},
        ),
        migrations.AddIndex(
            model_name='state',
            index=models.Index(fields=['workflow', 'name'], name='workflow_st_workflo_19465a_idx'),
        ),
        migrations.AddConstraint(
            model_name='state',
            constraint=models.UniqueConstraint(condition=models.Q(('is_initial', True)), fields=('workflow',), name='uniq_initial_state_per_workflow'),
        ),
        migrations.AlterUniqueTogether(
            name='state',
            unique_together={('workflow', 'name')},
        ),
        migrations.AddIndex(
            model_name='workflowobject',
            index=models.Index(fields=['workflow', 'content_type', 'object_id'], name='workflow_wo_workflo_537d40_idx'),
        ),
        migrations.AddIndex(
            model_name='workflowobject',
            index=models.Index(fields=['current_state'], name='workflow_wo_current_87b704_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='workflowobject',
            unique_together={('workflow', 'content_type', 'object_id')},
        ),
        migrations.AddIndex(
            model_name='workflowlog',
            index=models.Index(fields=['workflow_object', 'at'], name='workflow_wo_workflo_771151_idx'),
        ),
        migrations.AddIndex(
            model_name='workflowlog',
            index=models.Index(fields=['action'], name='workflow_wo_action_50a070_idx'),
        ),
    ]
