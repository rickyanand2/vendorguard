# Generated by Django 5.2.3 on 2025-08-29 08:12

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0005_alter_authevent_event'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ThirdParty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Legal or trading name.', max_length=255)),
                ('website', models.URLField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('lifecycle_status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('blacklisted', 'Blacklisted')], default='active', help_text='Internal business posture. Independent of workflow states.', max_length=20)),
                ('tier', models.IntegerField(choices=[(1, 'Tier 1 – Critical'), (2, 'Tier 2 – Important'), (3, 'Tier 3 – Standard')], default=3, help_text='Tiering used to pick assessment depth.')),
                ('criticality', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', help_text='Business impact if the third party fails.', max_length=10)),
                ('risk_snapshot', models.PositiveSmallIntegerField(default=0, help_text='0–100 quick snapshot only. Source-of-truth risk lives in assessments.', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('last_assessed', models.DateField(blank=True, null=True)),
                ('next_review_due', models.DateField(blank=True, null=True)),
                ('dpia_required', models.BooleanField(default=False, help_text='Set when personal data processing requires DPIA under your policy.')),
                ('processes_pii', models.BooleanField(default=True)),
                ('processes_pci', models.BooleanField(default=False)),
                ('processes_phi', models.BooleanField(default=False)),
                ('support_email', models.EmailField(blank=True, max_length=254)),
                ('security_contact_email', models.EmailField(blank=True, max_length=254)),
                ('security_portal_url', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant_id', models.IntegerField(blank=True, help_text='For SAME_TENANT workflow guards if you use a workflow engine.', null=True)),
                ('wf_state', models.CharField(default='DRAFT', help_text='External workflow state mirror (DRAFT/REVIEW/SUBMITTED/COMPLETE...).', max_length=50)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who first registered this third party.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_third_parties', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(help_text='Owning/tenant organization. Enforces per-tenant isolation.', on_delete=django.db.models.deletion.CASCADE, related_name='third_parties', to='accounts.organization')),
            ],
            options={
                'verbose_name': 'Third Party',
                'verbose_name_plural': 'Third Parties',
                'ordering': ['name'],
                'permissions': [('can_submit', 'Can submit third party for approval'), ('can_request_changes', 'Can request changes on third party'), ('can_reject', 'Can reject third party'), ('can_complete', 'Can mark third party as complete')],
            },
        ),
        migrations.CreateModel(
            name='ThirdPartyContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=40)),
                ('role', models.CharField(blank=True, max_length=120)),
                ('is_primary', models.BooleanField(default=False)),
                ('third_party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='thirdparties.thirdparty')),
            ],
            options={
                'ordering': ['third_party__name', '-is_primary', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ThirdPartyDomain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=191)),
                ('third_party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domains', to='thirdparties.thirdparty')),
            ],
            options={
                'ordering': ['third_party__name', 'domain'],
            },
        ),
        migrations.CreateModel(
            name='ThirdPartyEvidence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evidence_type', models.CharField(choices=[('soc2', 'SOC 2'), ('iso27001', 'ISO 27001'), ('pentest', 'Penetration Test'), ('sig', 'SIG Questionnaire'), ('caiq', 'CAIQ'), ('dpa', 'Data Processing Agreement'), ('contract', 'Contract'), ('dpia', 'DPIA'), ('other', 'Other')], default='other', max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('url', models.URLField(blank=True, help_text='Link to externally stored evidence (drive/share).')),
                ('issued_date', models.DateField(blank=True, null=True)),
                ('expires_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('third_party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evidence', to='thirdparties.thirdparty')),
            ],
            options={
                'verbose_name': 'Third Party Evidence',
                'verbose_name_plural': 'Third Party Evidence',
                'ordering': ['third_party__name', 'evidence_type', '-issued_date'],
            },
        ),
        migrations.CreateModel(
            name='ThirdPartyService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('service_type', models.CharField(choices=[('saas', 'SaaS'), ('paas', 'PaaS'), ('iaas', 'IaaS'), ('msp', 'Managed Service'), ('consulting', 'Consulting'), ('other', 'Other')], default='saas', max_length=20)),
                ('data_sensitivity', models.CharField(choices=[('public', 'Public'), ('internal', 'Internal'), ('confidential', 'Confidential'), ('restricted', 'Restricted')], default='confidential', help_text='Highest sensitivity handled by this service.', max_length=20)),
                ('processes_pii', models.BooleanField(default=True)),
                ('processes_pci', models.BooleanField(default=False)),
                ('processes_phi', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('third_party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='thirdparties.thirdparty')),
            ],
            options={
                'verbose_name': 'Third Party Service',
                'verbose_name_plural': 'Third Party Services',
                'ordering': ['third_party__name', 'name'],
            },
        ),
        migrations.AddIndex(
            model_name='thirdparty',
            index=models.Index(fields=['organization', 'name'], name='thirdpartie_organiz_35bede_idx'),
        ),
        migrations.AddIndex(
            model_name='thirdparty',
            index=models.Index(fields=['wf_state'], name='thirdpartie_wf_stat_8679fa_idx'),
        ),
        migrations.AddIndex(
            model_name='thirdparty',
            index=models.Index(fields=['tier'], name='thirdpartie_tier_56e316_idx'),
        ),
        migrations.AddIndex(
            model_name='thirdparty',
            index=models.Index(fields=['criticality'], name='thirdpartie_critica_fd2242_idx'),
        ),
        migrations.AddConstraint(
            model_name='thirdparty',
            constraint=models.UniqueConstraint(fields=('organization', 'name'), name='uniq_thirdparty_name_per_org'),
        ),
        migrations.AddIndex(
            model_name='thirdpartycontact',
            index=models.Index(fields=['third_party', 'email'], name='thirdpartie_third_p_b37692_idx'),
        ),
        migrations.AddConstraint(
            model_name='thirdpartycontact',
            constraint=models.UniqueConstraint(fields=('third_party', 'email'), name='uniq_contact_email_per_thirdparty'),
        ),
        migrations.AddIndex(
            model_name='thirdpartydomain',
            index=models.Index(fields=['third_party', 'domain'], name='thirdpartie_third_p_7f6f75_idx'),
        ),
        migrations.AddConstraint(
            model_name='thirdpartydomain',
            constraint=models.UniqueConstraint(fields=('third_party', 'domain'), name='uniq_domain_per_thirdparty'),
        ),
        migrations.AddIndex(
            model_name='thirdpartyevidence',
            index=models.Index(fields=['third_party', 'evidence_type'], name='thirdpartie_third_p_32d960_idx'),
        ),
        migrations.AddIndex(
            model_name='thirdpartyservice',
            index=models.Index(fields=['third_party', 'name'], name='thirdpartie_third_p_de8f75_idx'),
        ),
        migrations.AddIndex(
            model_name='thirdpartyservice',
            index=models.Index(fields=['service_type'], name='thirdpartie_service_2e24ca_idx'),
        ),
        migrations.AddConstraint(
            model_name='thirdpartyservice',
            constraint=models.UniqueConstraint(fields=('third_party', 'name'), name='uniq_service_name_per_thirdparty'),
        ),
    ]
